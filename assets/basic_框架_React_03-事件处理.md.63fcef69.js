import{_ as s,o as a,c as n,V as l}from"./chunks/framework.f3592640.js";const A=JSON.parse('{"title":"事件处理","description":"","frontmatter":{},"headers":[],"relativePath":"basic/框架/React/03-事件处理.md","filePath":"basic/框架/React/03-事件处理.md"}'),o={name:"basic/框架/React/03-事件处理.md"},t=l(`<h1 id="事件处理" tabindex="-1">事件处理 <a class="header-anchor" href="#事件处理" aria-label="Permalink to &quot;事件处理&quot;">​</a></h1><h2 id="_1-传统方法" tabindex="-1">1. 传统方法 <a class="header-anchor" href="#_1-传统方法" aria-label="Permalink to &quot;1. 传统方法&quot;">​</a></h2><div class="language-jsx"><button title="Copy Code" class="copy"></button><span class="lang">jsx</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">button</span><span style="color:#89DDFF;"> </span><span style="color:#C792EA;">onclick</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">activateLasers()</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">&gt;</span><span style="color:#A6ACCD;">Activate Lasers</span><span style="color:#89DDFF;">&lt;/</span><span style="color:#F07178;">button</span><span style="color:#89DDFF;">&gt;</span></span></code></pre></div><h2 id="_2-react-方法" tabindex="-1">2. React 方法 <a class="header-anchor" href="#_2-react-方法" aria-label="Permalink to &quot;2. React 方法&quot;">​</a></h2><div class="language-jsx"><button title="Copy Code" class="copy"></button><span class="lang">jsx</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#89DDFF;font-style:italic;">return</span><span style="color:#A6ACCD;"> (</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#89DDFF;">&lt;&gt;</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">{</span><span style="color:#676E95;font-style:italic;">/* 方法一 */</span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">button</span><span style="color:#89DDFF;"> </span><span style="color:#C792EA;">onClick</span><span style="color:#89DDFF;">={</span><span style="color:#A6ACCD;">activateLasers</span><span style="color:#89DDFF;">}&gt;</span><span style="color:#A6ACCD;">Activate Lasers</span><span style="color:#89DDFF;">&lt;/</span><span style="color:#F07178;">button</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">{</span><span style="color:#676E95;font-style:italic;">/* 方法二 */</span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">button</span><span style="color:#89DDFF;"> </span><span style="color:#C792EA;">onClick</span><span style="color:#89DDFF;">={()</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">=&gt;</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">this.</span><span style="color:#82AAFF;">activateLasers</span><span style="color:#A6ACCD;">()</span><span style="color:#89DDFF;">}&gt;</span><span style="color:#A6ACCD;">Activate Lasers</span><span style="color:#89DDFF;">&lt;/</span><span style="color:#F07178;">button</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">{</span><span style="color:#676E95;font-style:italic;">/* 方法二 */</span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">button</span><span style="color:#89DDFF;"> </span><span style="color:#C792EA;">onClick</span><span style="color:#89DDFF;">={this.</span><span style="color:#A6ACCD;">activateLasers</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">bind</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">this</span><span style="color:#A6ACCD;">)</span><span style="color:#89DDFF;">}&gt;</span><span style="color:#A6ACCD;">Activate Lasers</span><span style="color:#89DDFF;">&lt;/</span><span style="color:#F07178;">button</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#89DDFF;">&lt;/&gt;</span></span>
<span class="line"><span style="color:#A6ACCD;">)</span></span></code></pre></div><p>注意：</p><p>在 React 中，无法通过 <code>return false</code> 取消默认行为，解决方法：</p><ul><li><code>event.preventDefault();</code> 取消默认行为</li><li><code>event.stopPropagation();</code> 取消事件的冒泡</li></ul><p>和原生 JS 不同，在 React 中事件的属性需要使用驼峰命名法：</p><ul><li><code>onclick</code> -&gt; <code>onClick</code></li><li><code>onchange</code> -&gt; <code>onChange</code></li></ul><p>属性值不能直接执行代码，而是需要一个回调函数：</p><ul><li><code>onclick=&quot;alert(123)&quot;</code> -&gt; <code>onClick={()=&gt;{alert(123)}</code></li></ul>`,12),e=[t];function p(c,r,D,i,F,y){return a(),n("div",null,e)}const d=s(o,[["render",p]]);export{A as __pageData,d as default};
