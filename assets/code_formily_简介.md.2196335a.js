import{_ as o,o as r,c as e,V as i}from"./chunks/framework.f3592640.js";const l="/blog-fifi/images/formily1.png",t="/blog-fifi/images/formily2.png",y=JSON.parse('{"title":"Formily","description":"","frontmatter":{},"headers":[],"relativePath":"code/formily/简介.md","filePath":"code/formily/简介.md"}'),a={name:"code/formily/简介.md"},m=i('<h1 id="formily" tabindex="-1">Formily <a class="header-anchor" href="#formily" aria-label="Permalink to &quot;Formily&quot;">​</a></h1><blockquote><p>阿里开源的动态化表单的解决方案，优雅的解决了多种复杂场景的表单的数据、状态管理及跨表单通信问题，同时规避了全量渲染的弊端，性能优越。近期工作需求，对表单设计器做了简单的调研，Formily 是基于 designable 实现了一个功能丰富的拖拽式表单生成器。具体可查看<a href="https://formilyjs.org/" target="_blank" rel="noreferrer">官方文档</a>。</p></blockquote><h2 id="核心库介绍" tabindex="-1">核心库介绍 <a class="header-anchor" href="#核心库介绍" aria-label="Permalink to &quot;核心库介绍&quot;">​</a></h2><p>Formily 基于 MVVM 的设计原则，常用的基础核心库有@formily/core、@formily/react、@formily/vue、@formily/antd，支持 react 和 vue。</p><ul><li><p>@formily/core：ViewModel 层，负责管理表单的状态，表单校验，联动等等。</p><p><img src="'+l+'" alt=""></p></li><li><p>@formily/react 和@formily/vue：<strong>Model 层</strong>，作为 UI 库来接入内核数据，用来实现最终的表单交互效果。</p><p><img src="'+t+'" alt=""></p></li><li><p>@formily/antd：View 层，在 Ant Design 基础之上封装的开箱即用的组件库。</p></li></ul><h2 id="组件介绍" tabindex="-1">组件介绍 <a class="header-anchor" href="#组件介绍" aria-label="Permalink to &quot;组件介绍&quot;">​</a></h2><ul><li>FormProvider 组件是作为视图层桥接表单模型的入口，它只有一个参数，就是接收 createForm 创建出来的 Form 实例，并将 Form 实例以上下文形式传递到子组件中。</li><li>FormLayout 组件是用来批量控制 FormItem 样式的组件，这里我们指定布局为水平布局，也就是标签在左，组件在右。</li><li>FormConsumer 组件是作为响应式模型的响应器而存在，它核心是一个 render props 模式，在作为 children 的回调函数中，会自动收集所有依赖，如果依赖发生变化，则会重新渲染，借助 FormConsumer 我们可以很方便的实现各种计算汇总的需求。</li><li>FormButtonGroup 组件作为表单按钮组容器而存在，主要负责按钮的布局。</li><li>Submit 组件作为表单提交的动作触发器而存在，其实我们也可以直接使用 form.submit 方法进行提交，但是使用 Submit 的好处是不需要每次都在 Button 组件上写 onClick 事件处理器，同时它还处理了 Form 的 loading 状态，如果 onSubmit 方法返回一个 Promise，且 Promise 正在 pending 状态，那么按钮会自动进入 loading 状态。</li></ul>',7),n=[m];function s(c,d,f,p,_,u){return r(),e("div",null,n)}const g=o(a,[["render",s]]);export{y as __pageData,g as default};
