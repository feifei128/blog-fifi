import{_ as a,o as s,c as o,V as n}from"./chunks/framework.f3592640.js";const e="/blog-fifi/images/分页器1.png",t="/blog-fifi/images/分页器2.png",l="/blog-fifi/images/分页器3.png",i="/blog-fifi/images/分页器4.png",p="/blog-fifi/images/分页器5.png",r="/blog-fifi/images/分页器6.png",c="/blog-fifi/images/分页器7.png",g="/blog-fifi/images/分页器8.png",h="/blog-fifi/images/分页器9.png",_="/blog-fifi/images/分页器10.png",m="/blog-fifi/images/分页器11.png",u="/blog-fifi/images/分页器12.png",S=JSON.parse('{"title":"分页器","description":"","frontmatter":{},"headers":[],"relativePath":"projects/shangpinhui/05-分页器.md","filePath":"projects/shangpinhui/05-分页器.md"}'),d={name:"projects/shangpinhui/05-分页器.md"},f=n('<h1 id="分页器" tabindex="-1">分页器 <a class="header-anchor" href="#分页器" aria-label="Permalink to &quot;分页器&quot;">​</a></h1><h2 id="_1-iconfont" tabindex="-1">1. iconfont <a class="header-anchor" href="#_1-iconfont" aria-label="Permalink to &quot;1. iconfont&quot;">​</a></h2><h3 id="_1-1-介绍" tabindex="-1">1.1 介绍 <a class="header-anchor" href="#_1-1-介绍" aria-label="Permalink to &quot;1.1 介绍&quot;">​</a></h3><p>阿里官方矢量素材库，提供了大量常用的规范的 icon 供前端开发使用。</p><h3 id="_1-2-网址" tabindex="-1">1.2 网址： <a class="header-anchor" href="#_1-2-网址" aria-label="Permalink to &quot;1.2 网址：&quot;">​</a></h3><p><a href="https://www.iconfont.cn/" target="_blank" rel="noreferrer">https://www.iconfont.cn/</a></p><h3 id="_1-3-使用" tabindex="-1">1.3 使用 <a class="header-anchor" href="#_1-3-使用" aria-label="Permalink to &quot;1.3 使用&quot;">​</a></h3><ol><li>挑选，将想用的矢量图标加入项目，生成在线链接</li></ol><p><img src="'+e+`" alt="image.png"></p><ol start="2"><li>在 vue 项目中，index.html 中引入上图绿色框中的在线链接</li></ol><div class="language-html"><button title="Copy Code" class="copy"></button><span class="lang">html</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">link</span></span>
<span class="line"><span style="color:#89DDFF;">  </span><span style="color:#C792EA;">rel</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">stylesheet</span><span style="color:#89DDFF;">&quot;</span></span>
<span class="line"><span style="color:#89DDFF;">  </span><span style="color:#C792EA;">href</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">//at.alicdn.com/t/c/font_3745001_612ce8un50h.css</span><span style="color:#89DDFF;">&quot;</span></span>
<span class="line"><span style="color:#89DDFF;">/&gt;</span></span></code></pre></div><ol start="3"><li>复制图标代码：将鼠标移动到图标上，就展示下图所示的操作栏，点击复制代码。</li></ol><p><img src="`+t+'" alt="image.png"></p><ol start="4"><li>在使用该图标的组件中，设置图标代码：</li></ol><div class="language-html"><button title="Copy Code" class="copy"></button><span class="lang">html</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">span</span><span style="color:#89DDFF;"> </span><span style="color:#C792EA;">class</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">iconfont 复制的图标代码</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">&gt;&lt;/</span><span style="color:#F07178;">span</span><span style="color:#89DDFF;">&gt;</span></span></code></pre></div><h2 id="_2-实现卡条件排序功能" tabindex="-1">2. 实现卡条件排序功能 <a class="header-anchor" href="#_2-实现卡条件排序功能" aria-label="Permalink to &quot;2. 实现卡条件排序功能&quot;">​</a></h2><blockquote><p>效果：两个条件卡：综合、价格，每个条件都包含升序和降序的排列。当连续点击某个选项，要切换排序方式；当轮流点击选项，要切换选项。</p></blockquote><blockquote><p><img src="'+l+'" alt="image.png"><img src="'+i+'" alt="image.png"></p></blockquote><p>那么如何实现呢？</p><h3 id="_2-1-页面结构-为了识别用户点击哪个选项卡-定义计算属性-isone-为了识别用户点击升序还是降序-定义计算属性-isasc" tabindex="-1">2.1 页面结构，为了识别用户点击哪个选项卡，定义计算属性 isOne；为了识别用户点击升序还是降序，定义计算属性 isAsc <a class="header-anchor" href="#_2-1-页面结构-为了识别用户点击哪个选项卡-定义计算属性-isone-为了识别用户点击升序还是降序-定义计算属性-isasc" aria-label="Permalink to &quot;2.1 页面结构，为了识别用户点击哪个选项卡，定义计算属性 isOne；为了识别用户点击升序还是降序，定义计算属性 isAsc&quot;">​</a></h3><p><img src="'+p+'" alt="image.png"></p><p>其中，span 标签是放箭头图标的。</p><h3 id="_2-2-js-逻辑" tabindex="-1">2.2 js 逻辑 <a class="header-anchor" href="#_2-2-js-逻辑" aria-label="Permalink to &quot;2.2 js 逻辑&quot;">​</a></h3><p><img src="'+r+'" alt="image.png"></p><p><img src="'+c+'" alt="image.png"></p><h2 id="_3-分页器" tabindex="-1">3. 分页器 <a class="header-anchor" href="#_3-分页器" aria-label="Permalink to &quot;3. 分页器&quot;">​</a></h2><blockquote><p>效果：分为上、中、下三部分。其中上下部分各有“上一页”和“下一页”要动态设置 disable 属性是否可点击。当前页码为 1 时，上一页不能点击，当前页码为最后一页时，下一页不可点击。上下部分的省略号以及头尾页码也要设置动态的显示与隐藏。中间部分受 continue 参数的控制显示若干个连续页码，当前 continue=5，故显示 5 个页码，正常情况下当前页要在最中间，如果无法在中间显示，要分情况而定。</p></blockquote><blockquote><p><img src="'+g+'" alt="image.png"></p></blockquote><h3 id="_3-1-分页器组件-search-组件的子组件-已注册为全局组件-pagination。" tabindex="-1">3.1 分页器组件：Search 组件的子组件（已注册为全局组件）Pagination。 <a class="header-anchor" href="#_3-1-分页器组件-search-组件的子组件-已注册为全局组件-pagination。" aria-label="Permalink to &quot;3.1 分页器组件：Search 组件的子组件（已注册为全局组件）Pagination。&quot;">​</a></h3><ul><li>页面结构：下图中，黄色是向父组件传递用户点击哪个页码的自定义事件；红色是控制上下部分中省略号和头尾页动态显示的；橙色是控制上一页和下一页按钮是否可点击的；紫色是用户点击哪个页码，哪个页码就有样式。</li></ul><p><img src="'+h+'" alt="image.png"></p><ul><li>逻辑</li></ul><p><img src="'+_+'" alt="image.png"></p><h3 id="_3-2-search-组件中" tabindex="-1">3.2 Search 组件中 <a class="header-anchor" href="#_3-2-search-组件中" aria-label="Permalink to &quot;3.2 Search 组件中&quot;">​</a></h3><ul><li>页面结构</li></ul><p><img src="'+m+'" alt="image.png"></p><ul><li>逻辑：用户点击哪个页码，或者是点击上下页按钮后应该跳转到的页码，由子组件通过上图黄色框中的自定义事件传一个参数 p 过来，然后父组件重新请求数据。</li></ul><p><img src="'+u+'" alt="image.png"></p>',38),b=[f];function D(F,q,y,k,P,x){return s(),o("div",null,b)}const A=a(d,[["render",D]]);export{S as __pageData,A as default};
