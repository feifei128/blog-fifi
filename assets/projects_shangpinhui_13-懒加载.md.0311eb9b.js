import{_ as a,o as e,c as i,V as l}from"./chunks/framework.f3592640.js";const t="/blog-fifi/images/懒加载1.png",o="/blog-fifi/images/懒加载2.png",s="/blog-fifi/images/懒加载3.png",p="/blog-fifi/images/懒加载4.png",n="/blog-fifi/images/懒加载5.png",k=JSON.parse('{"title":"懒加载","description":"","frontmatter":{},"headers":[],"relativePath":"projects/shangpinhui/13-懒加载.md","filePath":"projects/shangpinhui/13-懒加载.md"}'),r={name:"projects/shangpinhui/13-懒加载.md"},c=l('<h1 id="懒加载" tabindex="-1">懒加载 <a class="header-anchor" href="#懒加载" aria-label="Permalink to &quot;懒加载&quot;">​</a></h1><h2 id="_1-图片懒加载" tabindex="-1">1. 图片懒加载 <a class="header-anchor" href="#_1-图片懒加载" aria-label="Permalink to &quot;1. 图片懒加载&quot;">​</a></h2><blockquote><p>在实际用户访问网站时，网站中的图片都是先加载一下再显示，弥补网慢时不显示任何内容的问题。</p></blockquote><ul><li>vue-lazyload 插件安装：<code>npm i vue-lazyload@1.3.3 -S</code></li></ul><p>那么如何在项目中使用它呢？</p><ul><li><p>main.js：</p><ul><li>引入</li></ul><p><img src="'+t+'" alt="image.png"></p><ul><li><p>注册</p><p><img src="'+o+'" alt="image.png"></p></li></ul></li><li><p>页面结构：将原来用 img 标签的 :src 全部改为 v-lazy，如：</p><p><img src="'+s+'" alt="image.png"></p></li></ul><h2 id="_2-自定义插件" tabindex="-1">2. 自定义插件 <a class="header-anchor" href="#_2-自定义插件" aria-label="Permalink to &quot;2. 自定义插件&quot;">​</a></h2><ul><li><p>封装自定义插件：定义一个 myPlugins.js 文件，在文件中定义并暴露一个对象</p><p><img src="'+p+'" alt="image.png"></p></li><li><p>使用自定义插件，先引入，再注册，与 lazyload 的使用方法一致。注册时的 use 其实是在调用上图中 install 函数（函数里可以带参数）。</p></li></ul><h2 id="_3-路由懒加载" tabindex="-1">3. 路由懒加载 <a class="header-anchor" href="#_3-路由懒加载" aria-label="Permalink to &quot;3. 路由懒加载&quot;">​</a></h2><blockquote><p>当打包构建时，js 包会变得非常大，影响页面加载。如果能把不同路由对应的组件，分割成一个个代码块，只有其被访问时才加载，就会更高效。</p></blockquote><p>标准写法：将引入代码写成函数形式，然后在设置路由时，把函数名赋值给 component 属性。</p><p><img src="'+n+'" alt="image.png"></p><p>简写：不用定义函数再赋值，直接赋值。</p><div class="language-"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#A6ACCD;">component: ()=&gt;import(&#39;./views/UserDetails.vue&#39;)</span></span></code></pre></div>',14),_=[c];function m(g,u,d,h,f,b){return e(),i("div",null,_)}const v=a(r,[["render",m]]);export{k as __pageData,v as default};
