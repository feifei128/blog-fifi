import{_ as a,c as t,o as r,a4 as p,ej as s,ek as i,el as e,em as o,en as l,eo as _,ep as m,eq as c,er as n,es as d,et as h,eu as g,ev as v,ew as u}from"./chunks/framework.C8gDNRqg.js";const V=JSON.parse('{"title":"智能家电后台","description":"","frontmatter":{},"headers":[],"relativePath":"projects/smartAppAdmin.md","filePath":"projects/smartAppAdmin.md"}'),f={name:"projects/smartAppAdmin.md"},A=p('<h1 id="智能家电后台" tabindex="-1">智能家电后台 <a class="header-anchor" href="#智能家电后台" aria-label="Permalink to &quot;智能家电后台&quot;">​</a></h1><blockquote><p>一个用于提升技术的练习项目，采用 Mock.js 模拟异步请求（后续开发只需替换接口），提供了基本的后台业务逻辑模块。由于 Ant Design Pro V6 的快速脚手架对 UMI 4 仅支持简易版本，所以本项目适用于对快速上手 Ant Design Pro V6 + UMI 4 的开发有需求的小伙伴。</p></blockquote><h2 id="📖-介绍" tabindex="-1">📖 介绍 <a class="header-anchor" href="#📖-介绍" aria-label="Permalink to &quot;📖 介绍&quot;">​</a></h2><ol><li>技术栈：Ant Design Pro V6 + UMI 4 + Ant Design 5 + Mock.js</li><li><a href="https://github.com/feifei128/smart-appliance-admin" target="_blank" rel="noreferrer">项目源码</a></li><li>项目还在开发过程中~~~ 未完成的功能尚存许多~</li></ol><h2 id="🔖-业务模块" tabindex="-1">🔖 业务模块 <a class="header-anchor" href="#🔖-业务模块" aria-label="Permalink to &quot;🔖 业务模块&quot;">​</a></h2><ul><li><p>登录</p><p><img src="'+s+'" alt="avatar"></p></li><li><p>工作台</p><p><img src="'+i+'" alt="avatar"></p></li><li><p>客户管理</p><p><img src="'+e+'" alt="avatar"></p><p>点击客户的名字可以查看详情：</p><p><img src="'+o+'" alt="avatar"></p><p>返回客户信息列表，点击【新建】按钮以新建客户：</p><p><img src="'+l+'" alt="avatar"></p></li><li><p>员工管理</p><p><img src="'+_+'" alt="avatar"></p><p>点击【考勤】查看员工的上下班打卡时间，鼠标 hover 时会显示具体时间： <img src="'+m+'" alt="avatar"></p><p>提供对员工禁用启用的操作，用以区分该员工是否在职： <img src="'+c+'" alt="avatar"> （注：已禁用的员工信息行置灰显示。其实这里还可以多做一些样式，比如将【禁用/启用】按钮换成【开关】、工作状态列字段也可以做一些 Tag 样式，都很简单。）</p><p>禁用/启用成功后会弹出 Modal 提示，在 3s 后自动关闭。</p><p><img src="'+n+'" alt="avatar"> （注：这里可以加个 icon 美化一下）</p><p>员工业绩列表： <img src="'+d+'" alt="avatar"></p></li><li><p>订单管理</p><p><img src="'+h+'" alt="avatar"></p><p>点击【查看订单信息】：</p><p><img src="'+g+'" alt="avatar"></p></li><li><p>设备管理</p><p>在设备管理模块，用 Mockjs 生成了这样几种智能家具的类型，贴两种图展示一下： <img src="'+v+'" alt="avatar"></p><p><img src="'+u+'" alt="avatar"></p></li></ul>',6),k=[A];function b(P,q,j,M,T,x){return r(),t("div",null,k)}const I=a(f,[["render",b]]);export{V as __pageData,I as default};
