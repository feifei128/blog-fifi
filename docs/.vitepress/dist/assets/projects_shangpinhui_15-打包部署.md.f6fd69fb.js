import{_ as i,c as e,o as a,V as o}from"./chunks/framework.987d87f6.js";const t="/blog-fifi/images/打包部署1.png",l="/blog-fifi/images/打包部署2.png",n="/blog-fifi/images/打包部署3.png",p="/blog-fifi/images/打包部署4.png",s="/blog-fifi/images/打包部署5.png",c="/blog-fifi/images/打包部署6.png",r="/blog-fifi/images/打包部署7.png",P=JSON.parse('{"title":"打包部署","description":"","frontmatter":{},"headers":[],"relativePath":"projects/shangpinhui/15-打包部署.md","filePath":"projects/shangpinhui/15-打包部署.md"}'),g={name:"projects/shangpinhui/15-打包部署.md"},_=o('<h1 id="打包部署" tabindex="-1">打包部署 <a class="header-anchor" href="#打包部署" aria-label="Permalink to &quot;打包部署&quot;">​</a></h1><h2 id="_1-打包" tabindex="-1">1. 打包： <a class="header-anchor" href="#_1-打包" aria-label="Permalink to &quot;1. 打包：&quot;">​</a></h2><ul><li><p>方法：在终端执行命令 <code>npm run build</code>，会得到一个 dist 文件夹。</p></li><li><p>结果：dist 文件夹的目录结构如下图</p></li></ul><p><img src="'+t+'" alt="image.png"></p><p>其中，js 文件夹里有许多 map 文件。</p><p><img src="'+l+'" alt="image.png"></p><p>因为在打包后，代码都是经过压缩加密的，报错后根本找不到 bug，map 文件可以帮助程序员准确输出 bug 具体位置。但是，map 文件是可以不要的，毕竟项目要上线了，bug 要在上线之前解决，上线后不需要了。那么可以在打包前在 vue.config.js 文件中进行配置，忽略 map 文件。</p><p><img src="'+n+'" alt="image.png"></p><h2 id="_2-服务器" tabindex="-1">2. 服务器 <a class="header-anchor" href="#_2-服务器" aria-label="Permalink to &quot;2. 服务器&quot;">​</a></h2><ul><li><p>购买渠道：阿里云、腾讯云等。</p></li><li><p>操作系统：优先选择 CentOS。</p></li><li><p>设置安全组，让服务器打开端口。如果没打开的话，上线会报错。</p></li><li><p>登陆服务器（老师使用的软件是 Xshell 6，然后用 Xftp 做文件管理）</p><ul><li>新建会话，填写服务器名称和服务器的 ip 地址，然后连接。</li></ul><p><img src="'+p+'" alt="image.png"></p><ul><li>输入用户名（root）和密码。</li><li>把打包后的 dist 文件放到一个指定位置，这里以尚硅谷老师的操作为例：</li></ul><p><img src="'+s+'" alt="image.png"></p></li></ul><h2 id="_3-nginx-反向代理" tabindex="-1">3. Nginx 反向代理 <a class="header-anchor" href="#_3-nginx-反向代理" aria-label="Permalink to &quot;3. Nginx 反向代理&quot;">​</a></h2><blockquote><p>建立两台服务器之间的联系。</p></blockquote><p>那么如何配置呢？</p><ol><li><p>执行<code>cd etc/nginx</code> （如果 etc 下没有 nginx 目录，也可以只 cd 到 etc 就执行下一步）</p></li><li><p>yum install nginx （执行完这句会发现，nginx 目录下多了一个 nginx.conf 文件）</p><ol><li>让用户访问我们的服务器时，能直接打开项目的主页：执行以下指令：vim nginx.conf （编辑该文件，在该文件内主要添加一项内容），输入 i 进入编辑模式。</li></ol><p><img src="'+c+'" alt="image.png"></p><ol start="2"><li>让我们的服务器能够访问后台服务器数据：也在 nginx.conf 里添加一项内容。</li></ol><p><img src="'+r+'" alt="image.png"></p></li><li><p>输入 <code>ESC</code> 退出编辑模式，输入<code>:wq</code> 保存并退出。</p></li><li><p>执行命令：<code>service nginx start</code> （如果这个不好用，可以试试 <code>systemctl restart nginx</code>）</p></li></ol><p>注意事项：如果有报错，根据弹幕提示可以尝试<code> chmod -R 777 root</code></p>',15),m=[_];function d(h,u,f,b,x,q){return a(),e("div",null,m)}const S=i(g,[["render",d]]);export{P as __pageData,S as default};
